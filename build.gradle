plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
    id 'checkstyle'
    id 'com.github.spotbugs' version '5.0.13'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    aspectVersion = "1.9.5"
    allureVersion = '2.14.0'
    junitVersion = '5.8.1'
    junitPioneerVersion = "1.4.2"
    seleniumVersion = '3.141.59'
    webdrivermanagerVersion = '4.2.0'
    assertjVersion = '3.21.0'
    cucumberVersion = '5.5.0'
    guiceVersion = '5.1.0'
    jsoupVersion = '1.15.4'
    lombokVersion = "1.18.20"
    restVersion = "5.3.0"
    jacksonVersion = "2.10.5"
    browser = 'chrome'
    baseUrl = 'https://petstore.swagger.io/v2'
}

dependencies {
    implementation 'com.consol.citrus:citrus-core:2.8.0'
    implementation 'com.consol.citrus:citrus-junit:3.0.0'
    implementation 'com.consol.citrus:citrus-http:2.8.0'
    implementation 'com.consol.citrus:citrus-jms:2.8.0'
    implementation 'com.consol.citrus:citrus-ws:2.8.0'
    implementation 'com.consol.citrus:citrus-java-dsl:2.8.0'
    implementation "org.junit.jupiter:junit-jupiter-params:5.8.1"
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.25'
    implementation 'org.slf4j:slf4j-log4j12:1.7.25'

    implementation ("io.qameta.allure:allure-junit5:${allureVersion}")
    implementation ("io.qameta.allure:allure-selenide:${allureVersion}")
    implementation ("io.qameta.allure:allure-assertj:${allureVersion}")
    implementation ("io.qameta.allure:allure-citrus:${allureVersion}")
    implementation "io.qameta.allure:allure-selenide:2.13.0"
    implementation "org.aspectj:aspectjrt:${aspectVersion}"
    implementation "org.aspectj:aspectjweaver:${aspectVersion}"


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

}

tasks.withType (JavaCompile) {
    options.encoding = propertySourceFileEncoding
}

tasks.withType (Test) {
    systemProperty 'file.encoding', propertySourceFileEncoding
}

configurations {
    testCompile
}

test {
    useJUnitPlatform()
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }

    resultsDir = file('allure-results')
    reportDir = file('allure-reports')
}

checkstyle {
    toolVersion "8.12"
    ignoreFailures false
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}